volumes:
  postgres_data:

services:
  # dex:
  #   image: ghcr.io/dexidp/dex:v2.35.3
  #   container_name: dex
  #   command: ["dex", "serve", "/etc/dex/config.yaml"]
  #   volumes:
  #     - ./dex-config.yaml:/etc/dex/config.yaml
  #   ports:
  #     - "5556:5556" # Dex HTTP API
  #     - "5557:5557" # Dex gRPC API

  ledger:
    image: ghcr.io/formancehq/ledger:v2.2.13
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:3068/_healthcheck" ]
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: ledger
    ports:
      - "3068:3068"
    environment:
      GOPATH: "/go"
      GOROOT: "/usr/local/go"
      GOWORK: off
      DEBUG: "true"
      POSTGRES_URI: "postgresql://ledger:password@postgres/ledger?sslmode=disable"
      POSTGRES_MAX_OPEN_CONNS: "40"
      POSTGRES_MAX_IDLE_CONNS: "40"
      POSTGRES_CONN_MAX_IDLE_TIME: "5m"
      EXPERIMENTAL_FEATURES: "true"
      AUTO_UPGRADE: "true"
      BULK_PARALLEL: "10"
      AUTH_ENABLED: "false"
      AUTH_ISSUER: "http://dex:5556"
      JSON_FORMATTING_LOGGER: "true"
    depends_on:
      - postgres
      # - dex

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: ledger
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ledger
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: streamlit
    environment:
      SHOW_TRANSACTION_FORM: "false"
      FORMANCE_API_URL: "http://ledger:3068"
    ports:
      - "8501:8501"
    depends_on:
      - ledger
